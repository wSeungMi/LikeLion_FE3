// 스트레티지 패턴
// 객체가 할 수 있는 행위를 하이레벨과 로우레벨로 나눠서 구현함
// 하이레벨 : 모든 객체가 상속 받는 변하지 않는 큰 틀의 행동 (어떤 행동을 하는지 제공만 함)
// 로우레벨 : (하이레벨을) 상속받는 객체의 종류에 따라 디테일한 변화가 가능한 행동을 의미함

// 스트레티지를 알면 객체지향의 4가지 특징을 골고루 배울 수 있음
// 객체지향의 4가지 특징 : 1. 추상화, 2. 캡슐화, 3. 다형성, 4. 상속

// (예시) 커피 만들기 클래스를 만든다면
/**
 * 1. 원두를 볶는다.
 * 2. 원두를 분쇄한다.
 * 3. 아메리카노 커피를 만든다. ---> 하이레벨과 로우레벨로 나눈다.
 * ---> 커피를 만든다.(하이레벨)
 * ------> (로우레벨 만들기 ↓)
 * 우유를 첨가하고 추출액과 섞는다. => 카페라떼
 * 필터를 설치하고 뜨거운 물을 부루잉한다. => 필터커피
 * 차가운 물을 부루잉한다. => 더치커피
 */
